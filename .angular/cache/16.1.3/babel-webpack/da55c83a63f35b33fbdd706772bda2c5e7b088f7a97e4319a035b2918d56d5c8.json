{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CommentaireService {\n  constructor(http) {\n    this.http = http;\n    this.url1 = 'http://localhost:8083/api/v1/commentaires/creer';\n    this.url2 = 'http://localhost:8083/api/v1/commentaires/contactUs';\n    this.url3 = 'http://localhost:8083/api/v1/commentaires/lireContacts';\n    this.url4 = 'http://localhost:8083/api/v1/commentaires/lire';\n    this.url5 = 'http://localhost:8083/api/v1/commentaires/lireTous';\n    this.url6 = 'http://localhost:8083/api/v1/commentaires/modifier';\n    this.url7 = 'http://localhost:8083/api/v1/commentaires/supprimer';\n  }\n  getComments() {\n    return this.http.get(this.url5);\n  }\n  createComment(commentaire, params) {\n    // Append the params to the URL as query parameters\n    const urlWithParams = `${this.url1}?${params.toString()}`;\n    // Make the HTTP post request with the updated URL containing both parameters\n    return this.http.post(urlWithParams, commentaire);\n  }\n  deletComment(idComment) {\n    return this.http.delete(`${this.url7}/${idComment}`);\n  }\n}\nCommentaireService.ɵfac = function CommentaireService_Factory(t) {\n  return new (t || CommentaireService)(i0.ɵɵinject(i1.HttpClient));\n};\nCommentaireService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CommentaireService,\n  factory: CommentaireService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["CommentaireService","constructor","http","url1","url2","url3","url4","url5","url6","url7","getComments","get","createComment","commentaire","params","urlWithParams","toString","post","deletComment","idComment","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\aFileProjects\\PROJET STAGE\\RecipesManagementSystem-FE\\src\\app\\services\\commentaire.service.ts"],"sourcesContent":["import { Commentaire } from './../models/commentaire';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CommentaireService {\n  url1 = 'http://localhost:8083/api/v1/commentaires/creer';\n  url2 = 'http://localhost:8083/api/v1/commentaires/contactUs';\n  url3 = 'http://localhost:8083/api/v1/commentaires/lireContacts';\n  url4 = 'http://localhost:8083/api/v1/commentaires/lire';\n  url5 = 'http://localhost:8083/api/v1/commentaires/lireTous';\n  url6 = 'http://localhost:8083/api/v1/commentaires/modifier';\n  url7 = 'http://localhost:8083/api/v1/commentaires/supprimer';\n\n  constructor(private http: HttpClient) {}\n\n  public getComments(): Observable<Commentaire> {\n    return this.http.get(this.url5);\n  }\n\n  createComment(\n    commentaire: Commentaire,\n    params: HttpParams\n  ): Observable<Commentaire> {\n    // Append the params to the URL as query parameters\n    const urlWithParams = `${this.url1}?${params.toString()}`;\n\n    // Make the HTTP post request with the updated URL containing both parameters\n    return this.http.post<Commentaire>(urlWithParams, commentaire);\n  }\n\n  deletComment(idComment: number): Observable<Commentaire> {\n    return this.http.delete<Commentaire>(`${this.url7}/${idComment}`);\n  }\n}\n"],"mappings":";;AASA,OAAM,MAAOA,kBAAkB;EAS7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IARxB,KAAAC,IAAI,GAAG,iDAAiD;IACxD,KAAAC,IAAI,GAAG,qDAAqD;IAC5D,KAAAC,IAAI,GAAG,wDAAwD;IAC/D,KAAAC,IAAI,GAAG,gDAAgD;IACvD,KAAAC,IAAI,GAAG,oDAAoD;IAC3D,KAAAC,IAAI,GAAG,oDAAoD;IAC3D,KAAAC,IAAI,GAAG,qDAAqD;EAErB;EAEhCC,WAAWA,CAAA;IAChB,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAC,IAAI,CAACJ,IAAI,CAAC;EACjC;EAEAK,aAAaA,CACXC,WAAwB,EACxBC,MAAkB;IAElB;IACA,MAAMC,aAAa,GAAG,GAAG,IAAI,CAACZ,IAAI,IAAIW,MAAM,CAACE,QAAQ,EAAE,EAAE;IAEzD;IACA,OAAO,IAAI,CAACd,IAAI,CAACe,IAAI,CAAcF,aAAa,EAAEF,WAAW,CAAC;EAChE;EAEAK,YAAYA,CAACC,SAAiB;IAC5B,OAAO,IAAI,CAACjB,IAAI,CAACkB,MAAM,CAAc,GAAG,IAAI,CAACX,IAAI,IAAIU,SAAS,EAAE,CAAC;EACnE;;AA5BWnB,kBAAkB,C;mBAAlBA,kBAAkB,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAlBxB,kBAAkB,C;SAAlBA,kBAAkB;EAAAyB,OAAA,EAAlBzB,kBAAkB,CAAA0B,IAAA;EAAAC,UAAA,EAFjB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}