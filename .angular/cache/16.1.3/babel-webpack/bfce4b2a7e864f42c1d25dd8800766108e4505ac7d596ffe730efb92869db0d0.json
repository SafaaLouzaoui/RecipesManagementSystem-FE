{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RecetteService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl1 = 'http://localhost:8083/api/v1/recettes/creer';\n    this.apiUrl2 = 'http://localhost:8083/api/v1/recettes/lireTous';\n    this.apiUrl3 = 'http://localhost:8083/api/v1/recettes/modifier';\n    this.apiUrl3_1 = 'http://localhost:8083/api/v1/recettes/modifier/mien';\n    this.apiUrl4 = 'http://localhost:8083/api/v1/recettes/lire';\n    this.apiUrl5 = 'http://localhost:8083/api/v1/recettes/supprimer';\n    this.apiUrl5_1 = 'http://localhost:8083/api/v1/recettes/mien/supprimer';\n    this.apiUrl6 = 'http://localhost:8083/api/v1/quantites/lireTous';\n    this.apiUrl7 = 'http://localhost:8083/api/v1/recettes/recettesByCategorie/';\n    this.token = localStorage.getItem('access_token');\n    this.headers = new HttpHeaders().set('Authorization', `Bearer ${this.token}`);\n  }\n  getRecettes() {\n    return this.http.get(this.apiUrl2);\n  }\n  getRecetteById(id) {\n    return this.http.get(`${this.apiUrl4}/${id}`);\n  }\n  createRecette(recette) {\n    return this.http.post(this.apiUrl1, recette, {\n      headers: this.headers\n    });\n  }\n  updateRecette(id, recette) {\n    return this.http.put(`${this.apiUrl3}/${id}`, recette, {\n      headers: this.headers\n    });\n  }\n  deleteRecette(id) {\n    return this.http.delete(`${this.apiUrl5}/${id}`);\n  }\n  getQuantite() {\n    return this.http.get(this.apiUrl6);\n  }\n  recettesByCategorie(id) {\n    return this.http.get(this.apiUrl7 + id);\n  }\n}\nRecetteService.ɵfac = function RecetteService_Factory(t) {\n  return new (t || RecetteService)(i0.ɵɵinject(i1.HttpClient));\n};\nRecetteService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RecetteService,\n  factory: RecetteService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","RecetteService","constructor","http","apiUrl1","apiUrl2","apiUrl3","apiUrl3_1","apiUrl4","apiUrl5","apiUrl5_1","apiUrl6","apiUrl7","token","localStorage","getItem","headers","set","getRecettes","get","getRecetteById","id","createRecette","recette","post","updateRecette","put","deleteRecette","delete","getQuantite","recettesByCategorie","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\aFileProjects\\PROJET STAGE\\RecipesManagementSystem-FE\\src\\app\\services\\recette.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Recette } from '../models/recette';\r\nimport { Quantite } from '../models/quantite';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RecetteService {\r\n  private apiUrl1 = 'http://localhost:8083/api/v1/recettes/creer';\r\n  private apiUrl2 = 'http://localhost:8083/api/v1/recettes/lireTous';\r\n  private apiUrl3 = 'http://localhost:8083/api/v1/recettes/modifier';\r\n  private apiUrl3_1 = 'http://localhost:8083/api/v1/recettes/modifier/mien';\r\n  private apiUrl4 = 'http://localhost:8083/api/v1/recettes/lire';\r\n  private apiUrl5 = 'http://localhost:8083/api/v1/recettes/supprimer';\r\n  private apiUrl5_1 = 'http://localhost:8083/api/v1/recettes/mien/supprimer';\r\n  private apiUrl6 = 'http://localhost:8083/api/v1/quantites/lireTous';\r\n  private apiUrl7 = 'http://localhost:8083/api/v1/recettes/recettesByCategorie/';\r\n\r\n  private token = localStorage.getItem('access_token');\r\n  private headers = new HttpHeaders().set('Authorization', `Bearer ${this.token}`);\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getRecettes(): Observable<Recette> {\r\n    return this.http.get<Recette>(this.apiUrl2);\r\n  }\r\n\r\n  getRecetteById(id: number): Observable<Recette> {\r\n    return this.http.get<Recette>(`${this.apiUrl4}/${id}`);\r\n  }\r\n\r\n  createRecette(recette: Recette): Observable<Recette> {\r\n    return this.http.post<Recette>(this.apiUrl1, recette, { headers: this.headers });\r\n  }\r\n\r\n  updateRecette(id: number, recette: Recette): Observable<Recette> {\r\n    return this.http.put<Recette>(`${this.apiUrl3}/${id}`, recette, { headers: this.headers });\r\n  }\r\n\r\n  deleteRecette(id: number): Observable<Recette> {\r\n    return this.http.delete<Recette>(`${this.apiUrl5}/${id}`);\r\n  }\r\n\r\n  public getQuantite(): Observable<Quantite> {\r\n    return this.http.get(this.apiUrl6);\r\n  }\r\n  public recettesByCategorie(id?: number): Observable<Recette> {\r\n    return this.http.get(this.apiUrl7 + id);\r\n  }\r\n}\r\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAQ9D,OAAM,MAAOC,cAAc;EAczBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAbhB,KAAAC,OAAO,GAAG,6CAA6C;IACvD,KAAAC,OAAO,GAAG,gDAAgD;IAC1D,KAAAC,OAAO,GAAG,gDAAgD;IAC1D,KAAAC,SAAS,GAAG,qDAAqD;IACjE,KAAAC,OAAO,GAAG,4CAA4C;IACtD,KAAAC,OAAO,GAAG,iDAAiD;IAC3D,KAAAC,SAAS,GAAG,sDAAsD;IAClE,KAAAC,OAAO,GAAG,iDAAiD;IAC3D,KAAAC,OAAO,GAAG,4DAA4D;IAEtE,KAAAC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAC5C,KAAAC,OAAO,GAAG,IAAIhB,WAAW,EAAE,CAACiB,GAAG,CAAC,eAAe,EAAE,UAAU,IAAI,CAACJ,KAAK,EAAE,CAAC;EAEzC;EAEvCK,WAAWA,CAAA;IACT,OAAO,IAAI,CAACf,IAAI,CAACgB,GAAG,CAAU,IAAI,CAACd,OAAO,CAAC;EAC7C;EAEAe,cAAcA,CAACC,EAAU;IACvB,OAAO,IAAI,CAAClB,IAAI,CAACgB,GAAG,CAAU,GAAG,IAAI,CAACX,OAAO,IAAIa,EAAE,EAAE,CAAC;EACxD;EAEAC,aAAaA,CAACC,OAAgB;IAC5B,OAAO,IAAI,CAACpB,IAAI,CAACqB,IAAI,CAAU,IAAI,CAACpB,OAAO,EAAEmB,OAAO,EAAE;MAAEP,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,CAAC;EAClF;EAEAS,aAAaA,CAACJ,EAAU,EAAEE,OAAgB;IACxC,OAAO,IAAI,CAACpB,IAAI,CAACuB,GAAG,CAAU,GAAG,IAAI,CAACpB,OAAO,IAAIe,EAAE,EAAE,EAAEE,OAAO,EAAE;MAAEP,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,CAAC;EAC5F;EAEAW,aAAaA,CAACN,EAAU;IACtB,OAAO,IAAI,CAAClB,IAAI,CAACyB,MAAM,CAAU,GAAG,IAAI,CAACnB,OAAO,IAAIY,EAAE,EAAE,CAAC;EAC3D;EAEOQ,WAAWA,CAAA;IAChB,OAAO,IAAI,CAAC1B,IAAI,CAACgB,GAAG,CAAC,IAAI,CAACR,OAAO,CAAC;EACpC;EACOmB,mBAAmBA,CAACT,EAAW;IACpC,OAAO,IAAI,CAAClB,IAAI,CAACgB,GAAG,CAAC,IAAI,CAACP,OAAO,GAAGS,EAAE,CAAC;EACzC;;AAzCWpB,cAAc,C;mBAAdA,cAAc,EAAA8B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdjC,cAAc,C;SAAdA,cAAc;EAAAkC,OAAA,EAAdlC,cAAc,CAAAmC,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}