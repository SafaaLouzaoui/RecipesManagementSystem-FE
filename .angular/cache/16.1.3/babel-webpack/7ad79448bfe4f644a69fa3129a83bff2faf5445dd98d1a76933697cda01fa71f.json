{"ast":null,"code":"import { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthClassGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    if (!this.authService.isAuthenticated()) {\n      return this.router.createUrlTree(['/login']);\n    }\n    const requiredRole = route.data['requiredRoles'];\n    if (!requiredRole) {\n      return true;\n    }\n    return this.authService.isUserInRole(requiredRole).pipe(map(isInRole => {\n      if (isInRole) {\n        return true;\n      } else {\n        return this.router.createUrlTree(['/404']);\n      }\n    }));\n  }\n}\nAuthClassGuard.ɵfac = function AuthClassGuard_Factory(t) {\n  return new (t || AuthClassGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\nAuthClassGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthClassGuard,\n  factory: AuthClassGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["map","AuthClassGuard","constructor","authService","router","canActivate","route","state","isAuthenticated","createUrlTree","requiredRole","data","isUserInRole","pipe","isInRole","i0","ɵɵinject","i1","AuthService","i2","Router","factory","ɵfac","providedIn"],"sources":["D:\\a-Projects Dev\\PROJET STAGE\\RecipesManagementSystem-FE\\src\\app\\auth-class.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n  Router,\r\n} from '@angular/router';\r\nimport { map, Observable } from 'rxjs';\r\nimport { AuthService } from './services/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthClassGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    if (!this.authService.isAuthenticated()) {\r\n      return this.router.createUrlTree(['/login']);\r\n    }\r\n\r\n    const requiredRole = route.data['requiredRoles'] as string;\r\n\r\n    if (!requiredRole) {\r\n      return true;\r\n    }\r\n\r\n    return this.authService.isUserInRole(requiredRole).pipe(\r\n      map((isInRole: any) => {\r\n        if (isInRole) {\r\n          return true;\r\n        } else {\r\n          return this.router.createUrlTree(['/404']);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n"],"mappings":"AAQA,SAASA,GAAG,QAAoB,MAAM;;;;AAMtC,OAAM,MAAOC,cAAc;EACzBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAEvEC,WAAWA,CACTC,KAA6B,EAC7BC,KAA0B;IAE1B,IAAI,CAAC,IAAI,CAACJ,WAAW,CAACK,eAAe,EAAE,EAAE;MACvC,OAAO,IAAI,CAACJ,MAAM,CAACK,aAAa,CAAC,CAAC,QAAQ,CAAC,CAAC;;IAG9C,MAAMC,YAAY,GAAGJ,KAAK,CAACK,IAAI,CAAC,eAAe,CAAW;IAE1D,IAAI,CAACD,YAAY,EAAE;MACjB,OAAO,IAAI;;IAGb,OAAO,IAAI,CAACP,WAAW,CAACS,YAAY,CAACF,YAAY,CAAC,CAACG,IAAI,CACrDb,GAAG,CAAEc,QAAa,IAAI;MACpB,IAAIA,QAAQ,EAAE;QACZ,OAAO,IAAI;OACZ,MAAM;QACL,OAAO,IAAI,CAACV,MAAM,CAACK,aAAa,CAAC,CAAC,MAAM,CAAC,CAAC;;IAE9C,CAAC,CAAC,CACH;EACH;;AA1BWR,cAAc,C;mBAAdA,cAAc,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;AAAdnB,cAAc,C;SAAdA,cAAc;EAAAoB,OAAA,EAAdpB,cAAc,CAAAqB,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}