{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PersonneService {\n  constructor(http) {\n    this.http = http;\n    this.url1 = 'http://localhost:8083/api/v1/utilisateurs/lireTous';\n    this.url2 = 'http://localhost:8083/api/v1/utilisateurs/bloquer/';\n    this.url3 = 'http://localhost:8083/api/v1/utilisateurs/lire/';\n    this.url4 = 'http://localhost:8083/api/v1/utilisateurs/modifier/';\n    this.url5 = 'http://localhost:8083/api/v1/utilisateurs/activer/';\n    this.url6 = 'http://localhost:8083/api/v1/utilisateurs/promote/';\n    this.token = localStorage.getItem('access_token');\n    this.headers = new HttpHeaders().set('Authorization', `Bearer ${this.token}`);\n  }\n  setUserPos(message) {\n    this.userpos = message;\n  }\n  getuserPos() {\n    return this.userpos;\n  }\n  setUserId(id) {\n    this.userId = id;\n  }\n  getUserId() {\n    return this.userId;\n  }\n  showOnePerson(id) {\n    return this.http.get(this.url3 + id);\n  }\n  updateUser(id, personne) {\n    return this.http.put(this.url4 + id, personne, {\n      headers: this.headers\n    });\n  }\n  getAllPersons() {\n    return this.http.get(this.url1, {\n      headers: this.headers\n    });\n  }\n  bloque_compte(id, personne1) {\n    return this.http.post(this.url2 + id, personne1, {\n      headers: this.headers\n    });\n  }\n  activer_compte(id, personne1) {\n    return this.http.post(this.url5 + id, personne1, {\n      headers: this.headers\n    });\n  }\n  promoteUserVersModerator(id, personne1) {\n    return this.http.post(this.url6 + id, personne1);\n  }\n  // public LoginUser(personne?: Personne): Observable<Object> {\n  //   return this.http.post(this.url7, personne);\n  // }\n  Abonner(id, idd, recette) {\n    const url = 'http://localhost:8083/api/v1/utilisateurs/abonner/' + id + '/' + idd;\n    return this.http.post(url, recette);\n  }\n}\nPersonneService.ɵfac = function PersonneService_Factory(t) {\n  return new (t || PersonneService)(i0.ɵɵinject(i1.HttpClient));\n};\nPersonneService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PersonneService,\n  factory: PersonneService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","PersonneService","constructor","http","url1","url2","url3","url4","url5","url6","token","localStorage","getItem","headers","set","setUserPos","message","userpos","getuserPos","setUserId","id","userId","getUserId","showOnePerson","get","updateUser","personne","put","getAllPersons","bloque_compte","personne1","post","activer_compte","promoteUserVersModerator","Abonner","idd","recette","url","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\aFileProjects\\PROJET STAGE\\RecipesManagementSystem-FE\\src\\app\\services\\personne.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Personne } from '../models/personne';\r\nimport { Recette } from '../models/recette';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PersonneService {\r\n  url1 = 'http://localhost:8083/api/v1/utilisateurs/lireTous';\r\n  url2 = 'http://localhost:8083/api/v1/utilisateurs/bloquer/';\r\n  url3 = 'http://localhost:8083/api/v1/utilisateurs/lire/';\r\n  url4 = 'http://localhost:8083/api/v1/utilisateurs/modifier/';\r\n  url5 = 'http://localhost:8083/api/v1/utilisateurs/activer/';\r\n  url6 = 'http://localhost:8083/api/v1/utilisateurs/promote/';\r\n\r\n  private token = localStorage.getItem('access_token');\r\n  private headers = new HttpHeaders().set(\r\n    'Authorization',\r\n    `Bearer ${this.token}`\r\n  );\r\n\r\n\r\n  constructor(private http: HttpClient) {}\r\n  userpos?: any;\r\n  userId?: any;\r\n  setUserPos(message?: string) {\r\n    this.userpos = message;\r\n  }\r\n  getuserPos() {\r\n    return this.userpos;\r\n  }\r\n\r\n  setUserId(id: any) {\r\n    this.userId = id;\r\n  }\r\n\r\n  getUserId() {\r\n    return this.userId;\r\n  }\r\n\r\n  public showOnePerson(id?: number): Observable<Personne> {\r\n    return this.http.get<Personne>(this.url3 + id);\r\n  }\r\n\r\n  public updateUser(id?: number, personne?: Personne): Observable<Object> {\r\n    return this.http.put(this.url4 + id, personne, { headers: this.headers });\r\n  }\r\n\r\n  public getAllPersons(): Observable<Personne[]> {\r\n    return this.http.get<Personne[]>(this.url1, { headers: this.headers });\r\n  }\r\n\r\n  public bloque_compte(\r\n    id?: number,\r\n    personne1?: Personne\r\n  ): Observable<Personne> {\r\n    return this.http.post<Personne>(this.url2 + id, personne1, { headers: this.headers });\r\n  }\r\n\r\n  public activer_compte(\r\n    id?: number,\r\n    personne1?: Personne\r\n  ): Observable<Personne> {\r\n    return this.http.post<Personne>(this.url5 + id, personne1, { headers: this.headers });\r\n  }\r\n  public promoteUserVersModerator(\r\n    id?: number,\r\n    personne1?: Personne\r\n  ): Observable<Personne> {\r\n    return this.http.post<Personne>(this.url6 + id, personne1);\r\n  }\r\n\r\n  // public LoginUser(personne?: Personne): Observable<Object> {\r\n  //   return this.http.post(this.url7, personne);\r\n  // }\r\n  public Abonner(\r\n    id: number,\r\n    idd: number,\r\n    recette: Recette\r\n  ): Observable<Object> {\r\n    const url =\r\n      'http://localhost:8083/api/v1/utilisateurs/abonner/' + id + '/' + idd;\r\n    return this.http.post(url, recette);\r\n  }\r\n}\r\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAQ9D,OAAM,MAAOC,eAAe;EAe1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAdxB,KAAAC,IAAI,GAAG,oDAAoD;IAC3D,KAAAC,IAAI,GAAG,oDAAoD;IAC3D,KAAAC,IAAI,GAAG,iDAAiD;IACxD,KAAAC,IAAI,GAAG,qDAAqD;IAC5D,KAAAC,IAAI,GAAG,oDAAoD;IAC3D,KAAAC,IAAI,GAAG,oDAAoD;IAEnD,KAAAC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAC5C,KAAAC,OAAO,GAAG,IAAIb,WAAW,EAAE,CAACc,GAAG,CACrC,eAAe,EACf,UAAU,IAAI,CAACJ,KAAK,EAAE,CACvB;EAGsC;EAGvCK,UAAUA,CAACC,OAAgB;IACzB,IAAI,CAACC,OAAO,GAAGD,OAAO;EACxB;EACAE,UAAUA,CAAA;IACR,OAAO,IAAI,CAACD,OAAO;EACrB;EAEAE,SAASA,CAACC,EAAO;IACf,IAAI,CAACC,MAAM,GAAGD,EAAE;EAClB;EAEAE,SAASA,CAAA;IACP,OAAO,IAAI,CAACD,MAAM;EACpB;EAEOE,aAAaA,CAACH,EAAW;IAC9B,OAAO,IAAI,CAACjB,IAAI,CAACqB,GAAG,CAAW,IAAI,CAAClB,IAAI,GAAGc,EAAE,CAAC;EAChD;EAEOK,UAAUA,CAACL,EAAW,EAAEM,QAAmB;IAChD,OAAO,IAAI,CAACvB,IAAI,CAACwB,GAAG,CAAC,IAAI,CAACpB,IAAI,GAAGa,EAAE,EAAEM,QAAQ,EAAE;MAAEb,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,CAAC;EAC3E;EAEOe,aAAaA,CAAA;IAClB,OAAO,IAAI,CAACzB,IAAI,CAACqB,GAAG,CAAa,IAAI,CAACpB,IAAI,EAAE;MAAES,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,CAAC;EACxE;EAEOgB,aAAaA,CAClBT,EAAW,EACXU,SAAoB;IAEpB,OAAO,IAAI,CAAC3B,IAAI,CAAC4B,IAAI,CAAW,IAAI,CAAC1B,IAAI,GAAGe,EAAE,EAAEU,SAAS,EAAE;MAAEjB,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,CAAC;EACvF;EAEOmB,cAAcA,CACnBZ,EAAW,EACXU,SAAoB;IAEpB,OAAO,IAAI,CAAC3B,IAAI,CAAC4B,IAAI,CAAW,IAAI,CAACvB,IAAI,GAAGY,EAAE,EAAEU,SAAS,EAAE;MAAEjB,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,CAAC;EACvF;EACOoB,wBAAwBA,CAC7Bb,EAAW,EACXU,SAAoB;IAEpB,OAAO,IAAI,CAAC3B,IAAI,CAAC4B,IAAI,CAAW,IAAI,CAACtB,IAAI,GAAGW,EAAE,EAAEU,SAAS,CAAC;EAC5D;EAEA;EACA;EACA;EACOI,OAAOA,CACZd,EAAU,EACVe,GAAW,EACXC,OAAgB;IAEhB,MAAMC,GAAG,GACP,oDAAoD,GAAGjB,EAAE,GAAG,GAAG,GAAGe,GAAG;IACvE,OAAO,IAAI,CAAChC,IAAI,CAAC4B,IAAI,CAACM,GAAG,EAAED,OAAO,CAAC;EACrC;;AA5EWnC,eAAe,C;mBAAfA,eAAe,EAAAqC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAfxC,eAAe,C;SAAfA,eAAe;EAAAyC,OAAA,EAAfzC,eAAe,CAAA0C,IAAA;EAAAC,UAAA,EAFd;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}