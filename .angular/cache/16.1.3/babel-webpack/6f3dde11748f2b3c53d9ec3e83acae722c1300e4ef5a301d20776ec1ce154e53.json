{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RecetteService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl1 = 'http://localhost:8083/api/v1/recettes/creer';\n    this.apiUrl2 = 'http://localhost:8083/api/v1/recettes/lireTous';\n    this.apiUrl3 = 'http://localhost:8083/api/v1/recettes/modifier';\n    this.apiUrl3_1 = 'http://localhost:8083/api/v1/recettes/mien/modifier';\n    this.apiUrl4 = 'http://localhost:8083/api/v1/recettes/lire';\n    this.apiUrl5 = 'http://localhost:8083/api/v1/recettes/supprimer';\n    this.apiUrl5_1 = 'http://localhost:8083/api/v1/recettes/mien/supprimer';\n    this.apiUrl6 = 'http://localhost:8083/api/v1/quantites/lireTous';\n    this.apiUrl7 = 'http://localhost:8083/api/v1/recettes/recettesByCategorie/';\n    this.apiUrl8 = 'http://localhost:8083/api/v1/recettes/mesRecettes';\n    this.token = localStorage.getItem('access_token');\n    this.headers = new HttpHeaders().set('Authorization', `Bearer ${this.token}`);\n  }\n  getRecettes() {\n    return this.http.get(this.apiUrl2);\n  }\n  getRecetteById(id) {\n    return this.http.get(`${this.apiUrl4}/${id}`);\n  }\n  getMesRecette(id) {\n    return this.http.get(`${this.apiUrl8}/${id}`);\n  }\n  createRecette(recette) {\n    return this.http.post(this.apiUrl1, recette, {\n      headers: this.headers\n    });\n  }\n  updateRecette(id, recette) {\n    return this.http.put(`${this.apiUrl3}/${id}`, recette, {\n      headers: this.headers\n    });\n  }\n  updateMesRecette(id, recette) {\n    return this.http.put(`${this.apiUrl3_1}/${id}`, recette, {\n      headers: this.headers\n    });\n  }\n  deleteRecette(id) {\n    return this.http.delete(`${this.apiUrl5}/${id}`, {\n      headers: this.headers\n    });\n  }\n  deleteMesRecette(id) {\n    return this.http.delete(`${this.apiUrl5_1}/${id}`, {\n      headers: this.headers\n    });\n  }\n  getQuantite() {\n    return this.http.get(this.apiUrl6);\n  }\n  recettesByCategorie(id) {\n    return this.http.get(this.apiUrl7 + id);\n  }\n}\nRecetteService.ɵfac = function RecetteService_Factory(t) {\n  return new (t || RecetteService)(i0.ɵɵinject(i1.HttpClient));\n};\nRecetteService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RecetteService,\n  factory: RecetteService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","RecetteService","constructor","http","apiUrl1","apiUrl2","apiUrl3","apiUrl3_1","apiUrl4","apiUrl5","apiUrl5_1","apiUrl6","apiUrl7","apiUrl8","token","localStorage","getItem","headers","set","getRecettes","get","getRecetteById","id","getMesRecette","createRecette","recette","post","updateRecette","put","updateMesRecette","deleteRecette","delete","deleteMesRecette","getQuantite","recettesByCategorie","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\a-Projects Dev\\PROJET STAGE\\RecipesManagementSystem-FE\\src\\app\\services\\recette.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Recette } from '../models/recette';\r\nimport { Quantite } from '../models/quantite';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RecetteService {\r\n  private apiUrl1 = 'http://localhost:8083/api/v1/recettes/creer';\r\n  private apiUrl2 = 'http://localhost:8083/api/v1/recettes/lireTous';\r\n  private apiUrl3 = 'http://localhost:8083/api/v1/recettes/modifier';\r\n  private apiUrl3_1 = 'http://localhost:8083/api/v1/recettes/mien/modifier';\r\n  private apiUrl4 = 'http://localhost:8083/api/v1/recettes/lire';\r\n  private apiUrl5 = 'http://localhost:8083/api/v1/recettes/supprimer';\r\n  private apiUrl5_1 = 'http://localhost:8083/api/v1/recettes/mien/supprimer';\r\n  private apiUrl6 = 'http://localhost:8083/api/v1/quantites/lireTous';\r\n  private apiUrl7 = 'http://localhost:8083/api/v1/recettes/recettesByCategorie/';\r\n  private apiUrl8 = 'http://localhost:8083/api/v1/recettes/mesRecettes';\r\n\r\n\r\n\r\n  private token = localStorage.getItem('access_token');\r\n  private headers = new HttpHeaders().set(\r\n    'Authorization',\r\n    `Bearer ${this.token}`\r\n  );\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getRecettes(): Observable<Recette> {\r\n    return this.http.get<Recette>(this.apiUrl2);\r\n  }\r\n\r\n  getRecetteById(id: number): Observable<Recette> {\r\n    return this.http.get<Recette>(`${this.apiUrl4}/${id}`);\r\n  }\r\n  getMesRecette(id: number): Observable<Recette[]> {\r\n    return this.http.get<Recette[]>(`${this.apiUrl8}/${id}`);\r\n  }\r\n\r\n  createRecette(recette: Recette): Observable<Recette> {\r\n    return this.http.post<Recette>(this.apiUrl1, recette, {\r\n      headers: this.headers\r\n    });\r\n  }\r\n\r\n  updateRecette(id: number, recette: Recette): Observable<Recette> {\r\n    return this.http.put<Recette>(`${this.apiUrl3}/${id}`, recette, {\r\n      headers: this.headers\r\n    });\r\n  }\r\n  updateMesRecette(id: number, recette: Recette): Observable<Recette> {\r\n    return this.http.put<Recette>(`${this.apiUrl3_1}/${id}`, recette, {\r\n      headers: this.headers\r\n    });\r\n  }\r\n\r\n\r\n  deleteRecette(id: number): Observable<Recette> {\r\n    return this.http.delete<Recette>(`${this.apiUrl5}/${id}`, {\r\n      headers: this.headers\r\n    });\r\n  }\r\n\r\n  deleteMesRecette(id: number): Observable<Recette> {\r\n    return this.http.delete<Recette>(`${this.apiUrl5_1}/${id}`, {\r\n      headers: this.headers\r\n    });\r\n  }\r\n\r\n  public getQuantite(): Observable<Quantite> {\r\n    return this.http.get(this.apiUrl6);\r\n  }\r\n  public recettesByCategorie(id?: number): Observable<Recette> {\r\n    return this.http.get(this.apiUrl7 + id);\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}