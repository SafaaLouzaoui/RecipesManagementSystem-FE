{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ListRecetteComponent = class ListRecetteComponent {\n  constructor(recetteService, route, router, categorieService, personneService) {\n    this.recetteService = recetteService;\n    this.route = route;\n    this.router = router;\n    this.categorieService = categorieService;\n    this.personneService = personneService;\n    this.recettes = [];\n    this.categories = [];\n    this.authUser = {};\n    this.filteredRecettes = []; // Replace 'any' with the actual type of your categories\n    this.recommendedRecettes = [];\n  }\n  ngOnInit() {\n    // Check if the URL contains an 'id' parameter\n    const id = Number(this.route.snapshot.paramMap.get('id'));\n    if (id) {\n      // If the 'id' parameter exists, display recipes by category\n      this.fetchRecettesByCategory(id);\n    } else {\n      // If the 'id' parameter does not exist, display all recipes\n      this.fetchRecettes();\n    }\n    this.getAuthenticatedUser();\n  }\n  getAuthenticatedUser() {\n    let id = Number(localStorage.getItem('idAuth'));\n    this.personneService.showOnePerson(id).subscribe(data => {\n      this.authUser = {\n        nomComplet: data.nomComplet,\n        user_name: data.user_name,\n        adresseMail: data.adresseMail,\n        role: data.role\n      };\n    }, error => {\n      console.log(error);\n    });\n  }\n  fetchRecettes() {\n    this.recetteService.getRecettes().subscribe(data => {\n      this.recettes = data;\n      this.filteredRecettes = [...this.recettes];\n    }, error => {\n      console.log(error);\n    });\n  }\n  fetchRecettesByCategory(categorie_id) {\n    this.recetteService.recettesByCategorie(categorie_id).subscribe(data => {\n      this.recettes = data;\n    }, error => {\n      console.log('Une erreur s\\'est produite lors du chargement des recettes : ', error);\n    });\n  }\n  viewRecette(id) {\n    this.router.navigate(['/recette', id]);\n  }\n  addRecette() {\n    this.router.navigate(['recettes/add']);\n  }\n  updateRecette(id) {\n    this.router.navigate(['recettes/update', id]);\n  }\n  deleteRecette(id) {\n    if (confirm('Are you sure you want to delete this recette?')) {\n      this.recetteService.deleteRecette(id).subscribe(() => {\n        this.fetchRecettes();\n      }, error => {\n        console.log(error);\n      });\n    }\n  }\n  filterRecipes() {\n    if (this.selectedRecettes) {\n      // If a search query is entered, filter the categories based on it\n      const filterValue = this.selectedRecettes.toLowerCase();\n      this.filteredRecettes = this.recettes.filter(recettes => recettes.nom?.toLowerCase().includes(filterValue));\n      // Generate recommended categories based on the filter value\n      this.recommendedRecettes = this.recettes.filter(recettes => recettes.nom?.toLowerCase().startsWith(filterValue) && !this.filteredRecettes.includes(recettes));\n    } else {\n      // If the search query is empty, show all categories\n      this.filteredRecettes = [...this.recettes];\n    }\n  }\n};\nListRecetteComponent = __decorate([Component({\n  selector: 'app-list-recette',\n  templateUrl: './list-recette.component.html',\n  styleUrls: ['./list-recette.component.css']\n})], ListRecetteComponent);","map":{"version":3,"names":["Component","ListRecetteComponent","constructor","recetteService","route","router","categorieService","personneService","recettes","categories","authUser","filteredRecettes","recommendedRecettes","ngOnInit","id","Number","snapshot","paramMap","get","fetchRecettesByCategory","fetchRecettes","getAuthenticatedUser","localStorage","getItem","showOnePerson","subscribe","data","nomComplet","user_name","adresseMail","role","error","console","log","getRecettes","categorie_id","recettesByCategorie","viewRecette","navigate","addRecette","updateRecette","deleteRecette","confirm","filterRecipes","selectedRecettes","filterValue","toLowerCase","filter","nom","includes","startsWith","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\a-Projects Dev\\PROJET STAGE\\RecipesManagementSystem-FE\\src\\app\\list-recette\\list-recette.component.ts"],"sourcesContent":["import { PersonneService } from './../services/personne.service';\r\nimport { AuthService } from './../services/auth.service';\r\nimport { HeaderComponent } from './../header/header.component';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport {ActivatedRoute, Router } from '@angular/router';\r\nimport { RecetteService } from '../services/recette.service';\r\nimport { Recette } from '../models/recette';\r\nimport { Categorie } from '../models/categorie';\r\nimport { CategorieService } from '../services/categorie.service';\r\nimport { Personne } from '../models/personne';\r\n\r\n\r\n@Component({\r\n  selector: 'app-list-recette',\r\n  templateUrl: './list-recette.component.html',\r\n  styleUrls: ['./list-recette.component.css']\r\n})\r\nexport class ListRecetteComponent implements OnInit {\r\n  recettes: Recette[] = [];\r\n  categories: Categorie[] = [];\r\n  authUser: Personne = {};\r\n  filteredRecettes: Recette[] = []; // Replace 'any' with the actual type of your categories\r\n  selectedRecettes: any; // Replace 'any' with the actual type of your category\r\n  recommendedRecettes: Recette[] = [];\r\n\r\n  constructor(private recetteService: RecetteService,private route: ActivatedRoute, private router: Router,private categorieService: CategorieService, private personneService: PersonneService) { }\r\n\r\n  ngOnInit(): void {\r\n    // Check if the URL contains an 'id' parameter\r\n    const id = Number(this.route.snapshot.paramMap.get('id'));\r\n    if (id) {\r\n      // If the 'id' parameter exists, display recipes by category\r\n      this.fetchRecettesByCategory(id);\r\n    } else {\r\n      // If the 'id' parameter does not exist, display all recipes\r\n      this.fetchRecettes();\r\n    }\r\n\r\n    this.getAuthenticatedUser();\r\n\r\n  }\r\n\r\n  getAuthenticatedUser() {\r\n    let id = Number (localStorage.getItem('idAuth'));\r\n    this.personneService.showOnePerson(id).subscribe(\r\n      (data) => {\r\n        this.authUser = {\r\n          nomComplet : data.nomComplet,\r\n          user_name : data.user_name,\r\n          adresseMail : data.adresseMail,\r\n          role : data.role\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  fetchRecettes(): void {\r\n    this.recetteService.getRecettes().subscribe(\r\n      (data:any) => {\r\n        this.recettes = data;\r\n        this.filteredRecettes = [...this.recettes];\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  fetchRecettesByCategory(categorie_id: number): void {\r\n    this.recetteService.recettesByCategorie(categorie_id).subscribe(\r\n      (data: any) => {\r\n        this.recettes = data;\r\n      },\r\n      error => {\r\n        console.log('Une erreur s\\'est produite lors du chargement des recettes : ', error);\r\n      }\r\n    );\r\n  }\r\n  viewRecette(id: number | undefined): void {\r\n    this.router.navigate(['/recette', id]);\r\n  }\r\n  addRecette(): void{\r\n    this.router.navigate(['recettes/add']);\r\n  }\r\n  updateRecette(id: number): void {\r\n    this.router.navigate(['recettes/update',id]);\r\n  }\r\n  deleteRecette(id: number): void {\r\n    if (confirm('Are you sure you want to delete this recette?')) {\r\n      this.recetteService.deleteRecette(id).subscribe(\r\n        () => {\r\n          this.fetchRecettes();\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  filterRecipes() {\r\n    if (this.selectedRecettes) {\r\n      // If a search query is entered, filter the categories based on it\r\n      const filterValue = this.selectedRecettes.toLowerCase();\r\n      this.filteredRecettes = this.recettes.filter((recettes) =>\r\n        recettes.nom?.toLowerCase().includes(filterValue)\r\n      );\r\n      // Generate recommended categories based on the filter value\r\n      this.recommendedRecettes = this.recettes.filter(\r\n        (recettes) =>\r\n        recettes.nom?.toLowerCase().startsWith(filterValue) &&\r\n          !this.filteredRecettes.includes(recettes)\r\n      );\r\n    } else {\r\n      // If the search query is empty, show all categories\r\n      this.filteredRecettes = [...this.recettes];\r\n    }\r\n  }\r\n\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}